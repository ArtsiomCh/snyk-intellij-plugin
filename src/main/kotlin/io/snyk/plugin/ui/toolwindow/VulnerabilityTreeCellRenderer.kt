package io.snyk.plugin.ui.toolwindow

import com.intellij.ui.ColoredTreeCellRenderer
import com.intellij.util.ui.UIUtil
import io.snyk.plugin.cli.Vulnerability
import icons.SnykIcons
import io.snyk.plugin.ui.PackageManagerIconProvider
import javax.swing.JTree
import javax.swing.tree.DefaultMutableTreeNode

class VulnerabilityTreeCellRenderer : ColoredTreeCellRenderer() {
    override fun customizeCellRenderer(
        tree: JTree,
        value: Any,
        selected: Boolean,
        expanded: Boolean,
        leaf: Boolean,
        row: Int,
        hasFocus: Boolean) {

        if (value is VulnerabilityTreeNode) {
            if (value.userObject is Vulnerability) {
                val vulnerability = value.userObject as Vulnerability

                val severityIcon = when (vulnerability.severity) {
                    "high" -> SnykIcons.HIGH_SEVERITY
                    "medium" -> SnykIcons.MEDIUM_SEVERITY
                    "low" -> SnykIcons.LOW_SEVERITY
                    else -> SnykIcons.VULNERABILITY_24
                }

                icon = severityIcon
                font = UIUtil.getTreeFont()

                append(vulnerability.getPackageNameTitle())
            }
        } else if (value is FileTreeNode) {
            val nodePair = value.userObject as Pair<String, String>

            icon = PackageManagerIconProvider.getIcon(nodePair.second.toLowerCase())
            font = UIUtil.getTreeFont()

            append(nodePair.first)
        } else if (value is DefaultMutableTreeNode) {
            icon = SnykIcons.VULNERABILITY_16
            font = UIUtil.getTreeFont()

            append(value.userObject.toString())
        }
    }
}
