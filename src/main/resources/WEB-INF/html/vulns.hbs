<!DOCTYPE html>
<html lang="en-GB">
<head>
    <meta charset="utf-8">
    <script src="/assets/scripts/jquery.min.js"></script>
    <script src="/assets/scripts/jquery.visible.min.js"></script>
    <script src="/assets/scripts/TweenMax.min.js"></script>
    <script src="/assets/scripts/ScrollToPlugin.min.js"></script>
    {{> @inline-css }}
</head>
<body>
    <main>
        {{! <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div> }}
        <div class="project-title">Project: {{currentProject}}</div>
        <ul>
            {{#each miniVulns}}
                {{> @ide-issue-card card_id=@index}}
            {{/each}}
        </ul>

        {{!--
        <div style="display: none">
            {{> @color-sampler }}
        </div>
        --}}
    </main>
    <script>
        // Helper function:
        // Determine the correct callback function to set to be notified when
        // CSS animated transitions have completed.
        function whichTransitionEvent(){
            let el = document.createElement("fakeelement");

            let transitions = {
                "transition"      : "transitionend",
                "OTransition"     : "oTransitionEnd",
                "MozTransition"   : "transitionend",
                "WebkitTransition": "webkitTransitionEnd"
            };

            for (t in transitions){
                if (el.style[t] !== undefined){
                    return transitions[t];
                }
            }
        }

        let transitionEvent = whichTransitionEvent();

        // Helper function:
        // Check if testElem is entirely within the viewport.
        // If not, scroll to place headerElemName at the top
        function ensureInViewport(testElem, headerElemName){
            if(!testElem.visible()) {
                TweenLite.to(window, .5, {
                    scrollTo: headerElemName,
                    ease: Power2.easeInOut
                });
            }
        }

        $(document).ready(function(){
            // Ensure margin-top for remediation blocks positions them only JUST high enough
            // to not be visible, so the reveal animation is smooth
            $(".remediations").each(function(index, element){
                let el = $(element);
                el.css('margin-top', -el.height() - 3);
            });

            // Explicitly set margin-top on remediation blocks to animate into/out of visibility
            // when the relevant link is clicked.  Also ensure that they're scrolled into view
            // (if necessary) following the reveal animation.
            $(".upgrade-link").click(function(){
                let nodeid = $(this).attr("data-nodeid");
                let remedBlock = $('#remediations-' + nodeid);

                if(remedBlock.hasClass("revealed")) {
                    remedBlock.removeClass("revealed");
                    remedBlock.css('margin-top', -remedBlock.height() - 3);
                } else {
                    remedBlock.addClass("revealed");
                    remedBlock.css('margin-top', 0);
                    remedBlock.one(transitionEvent, function(event) {
                        ensureInViewport(remedBlock, "#li-" + nodeid);
                    });
                }
            });

            // Ensure that an dep subtree is scrolled into view (if necessary)
            // when expanded.
            $('.list-checkbox').change(function() {
                if(this.checked) {
                    let childBlock = $(this).next("ul");
                    ensureInViewport(childBlock, "#" + this.id);
                }
            });
        });
    </script>
</body>
</html>
